'''
    변수를 사용 하는 이유 : 자료를 저장 해서 추후에 사용 할려고
    함수 function
        함 : 담을 함
        수 : 숫자    -----> 숫자를 담아 놓은
        - 수학 : 두 집합 사이의 관계를 설명 하는 논리적 개념
        - 컴퓨터 : 코드를 담아 놓은 상자
            - 왜 코드를 담아 놓을까 ?? 코드를 저장 해서 추후에 사용 할려고
        - 함수를 사용 해야 되는 이유
            1. 재사용성 [ 정의/만들기 1번 , 호출/사용은 여러번 ] , 코드 줄이기 -> 클린 코딩
            2. 메모리 효율적 으로 사용 , 기능/함수 사용할 때만 변수를 쓰고 기능/함수 끝나면 변수를 버리기
                - 함수 안에서 선언된 변수는 함수가 종료되면 초기화/사라짐 => 함수 안 에서만 사용 => 지역 변수
            3. 인수에 따른 서로 다른 결과물 만들수 있다.
                   x = 3 , y = 5  ---> 더하기함수 ---> 결과 8
                   x = 2 , y = 3  ---> 더하기함수 ---> 결과 5
        - 함수를 만드는 방법
            def 함수명( 매개변수 , 매개변수 ) :
                실행문
                return 값
        - 함수를 호출 / 사용 하는 방법
            함수명 ( 값 , 값 )
        - 용어
            매개 변수/인자/인수 : 호출시 함수 안으로 들어 가는 데이터/자료       [ 입력 ]
            리턴/return /반환 : 함수가 종료시 함수 호출 했던 곳으로 값 반환     [ 출력 ]
                                    ---------------------
            a = 3 , b =5                     a + b                  8
                                    ---------------------
                                    ---------------------
            a = 2 , b =3                     a + b                  5
                                    ---------------------

                                    ---------------------
            과일 = 바나나                    믹서기                 바나나 주스
                                    ---------------------
                                    ---------------------
            과일 = 딸기                     믹서기                 딸기 주스
                                    ---------------------

                                    ---------------------
            출력내용 = '안녕'               print
                                    console창에 '안녕' 출력된다.
                                    ---------------------

                                    ---------------------
            출력내용 = 'python'             print
                                    console창에 'python' 출력된다.
                                    ---------------------

                                    ---------------------
            출력내용 = '정수입력:'             input                입력받은 데이터
                                    console창에 '정수입력:' 출력된다.
                                    ---------------------


        - 라이브러리[ 파이썬을 만든 회사/사람이 미리 제공 하는 함수들 ] 함수
            input ( )  , int ( ) , print ( ) 등등

'''
# 코드 따라 입력 하기 , 함수 정의
def add_numbers( a , b ) :
    sum = a + b
    return sum
# 함수 호출  ,
result1 = add_numbers( 3 , 5 )
print( result1 )
result2 = add_numbers( 2 , 3 )
print( result2 )

print("안녕")     # print() 함수에게 '안녕# ' 문자열 자료를 전달 ,
print("python")
# str = input('정수입력:')  # input( ) 함수에게 '정수입력:' 문자열 자료를 전달 후 결과를 변수에 대입

# [1] 매개변수와 리턴값 이 없는 함수
# [1-1] 함수 정의/만들기
def A믹서기함수( ) : # 매개변수 없다 , 함/상자 수 안으로 들어오는 값이 없다.
    print( f' == 주스 생성중1 == ')
    # 리턴값 없음
# [1-2] 함수 호출/사용
A믹서기함수( )   # 함수 호출하는데 주고것(매개변수)도 없고 받는것(리턴값)도 없다. 상호작용

# [2] 매개변수가 있고 리턴값이 없는 함수
# [2-1]
def B믹서기함수( 과일 ) : # 매개변수는 과일
    print( f' == {과일}주스 생성중2 ==')
    # 리턴값 없음
# [2-2]
B믹서기함수( '바나나' ) # 함수 호출시 들어가는 매개변수의 값에 따른 서로 다른 결과물 얻을수 있다.
B믹서기함수( '딸기' )

# [3] 매개변수가 없고 리턴값이 있는 함수
def C믹서기함수( ) : # 매개변수 없다.
    print( f' == 주스 생성중3 == ')
    return f'주스'

종이컵1 = C믹서기함수()    # 함수 호출 후 결과를 변수에 저장
print( 종이컵1 )

# [4] 매개변수가 있고 리턴값이 있는 함수
def D믹서기함수( 과일 ) :
    print( f' == {과일}주스 생성중4 == ')
    return f'{과일}주스'

종이컵2 = D믹서기함수('바나나')
print( 종이컵2 )

종이컵3 = D믹서기함수('딸기')
print( 종이컵3 )

a = input('입력값:') # 입력함수에서 입력받은 값을 변수에 저장






















